<% object.is_public = true if object.new_record? %>
<%= tinymce_assets %>
<%= tinymce %>
<% if object.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(object.errors.count, "error") %> prohibited this association note from being saved:</h2>
    <ul>
    <% object.errors.full_messages.each do |msg| %>
      <li><%= msg %></li>
    <% end %>
    </ul>
  </div>
<% end %>
<fieldset>
	<legend><%= ts :for, what: AssociationNote.model_name.human.titleize, whom: "#{object.notable}\'s #{object.association_type_name}" %></legend>
<%= f.hidden_field :association_type %>
	<div class="row">
<%=   f.label(:custom_note_title, ts('type.in', what: Note.human_attribute_name(:custom_note_title))) %>
<%=   f.text_field :custom_note_title, class: [:text, 'text-full form-control form-text'] %>
	</div>
	<div class="row">
<%=   f.label(:note_title_id, t('or.record', what: t('choose.from', what: NoteTitle.model_name.human(count: :many))).capitalize.s) %>
<%=   f.collection_select :note_title_id, NoteTitle.all.sort_by{ |n| n.to_s }, :id, :to_s, {include_blank: true}, class: 'form-control form-select ss-select selectpicker' %>
	</div>
	<div class="row">
<%=   f.label :content, Note.model_name.human.titleize.s %>
	</div>
	<div class="row">
<%=   f.text_area :content, rows: 4, class: 'tinymce' %>
	</div>
	<div class="row">
<%=   f.label(:is_public).s %>
<%=   f.check_box :is_public %>
	</div>
<%= link_to ts('add.record', what: t('new.record', what: t(:author, count: 1).capitalize)), polymorphic_path([:admin, object.notable, object.class.name.tableize], action: 'add_author'), remote: true %>
	<div id="authors_div">
<%    for author in object.authors %>
<%=     render partial: 'authors_selector', locals: {selected: author.id} %>
<%    end %>
	</div>
	<div id="update_div"/>	
</fieldset>